Build and Deploy a MERN(MongoDB, Express JS, React, Node JS) Stack Admin Dashboard.

For frontend, we will be using Material UI (for styling), Material UI Data Grid(for tables), Nivo Charts(for charts), Redux Toolkit(for state management) and Redux Toolkit Query(for making API calls).
For backend, we will be using Node JS(as runtime), Express Js(as backend framework), Mongoose(for managing MongoDB), and MongoDB.

Includes Data Model using Entity Relationship Diagrams as well as making aggregate calls in MongoDB.

$ mkdir server && cd server
$ npm init -y

$ npm i express body-parser cors dotenv helmet morgan mongoose nodemon

express - framework for our APIs
body-parser - for parsing our data coming in
cors - for Cross Origin Resource Sharing
dotenv - for environtment variables
helmet - for protecting our APIs
morgan - for logging our API calls
mongoose - for handling MongoDB calls
nodemon - for liveserver re-load

MongoDB Atlas Setup:
Create free Cluster at https://cloud.mongodb.com/

Create frontend React app:
$ npx create-react-app client

Install "ES7+ React/Redux/React-Native snippets" VS code extension by dsznajder,
"Prettier - Code formatter" by Prettier prettier.io,
"Tailwind Shades" by Omar Bourhaouta,
"Turbo Console Log" by Anas Chakroun.

$ cd client
$ npm i react-redux @reduxjs/toolkit react-datepicker react-router-dom@6 @mui/material @mui/icons-material @mui/x-data-grid @emotion/react @emotion/styled @nivo/core @nivo/bar @nivo/geo @nivo/pie

$ npm i react-datepicker@4.8.0 (if issue with datepicker in newer version)

Import specific font weights of Inter font from fonts.google.com

In backend comment the code to add data to MongoDB database as it's only one time.

Add REACT_APP_BASE_URL in client -> .env.local
Need to update it with new value when deploying

https://mui.com/material-ui/react-card/#system-BasicCard.tsx

https://mui.com/x/react-data-grid/

Difference between Customers table transaction table is in transaction we do server side pagination(means only limit rows fetched everytime).

https://mui.com/x/react-data-grid/pagination/#server-side-pagination

https://mui.com/x/react-data-grid/components/#toolbar

https://mongoosejs.com/docs/api/model.html#Model.find()

$ npm i country-iso-2-to-3 (to convert 2 char country code to 3 char as need in nivo charts)

https://nivo.rocks/choropleth/ -> here -> https://github.com/plouc/nivo/blob/master/website/src/data/components/geo/world_countries.json -> Raw -> copy to geoData.js

https://nivo.rocks/choropleth/ -> change the map style -> copy the code to use (remove defs, fills)

$ npm i @nivo/line

https://nivo.rocks/line/
Format the input data as per above
Get the code from above to display in react

In Daily page we are not using separate component, so we add Data Picker Code, update input data to format supported by chart, nivo chart code
https://www.npmjs.com/package/react-datepicker -> https://github.com/Hacker0x01/react-datepicker -> https://github.com/Hacker0x01/react-datepicker?tab=readme-ov-file#installation
https://reactdatepicker.com/#example-date-range

Code from daily page is copied to monhtly page with small modifications.

https://nivo.rocks/pie/

Code from customers page is copied to admin page with small modifications.

https://www.mongodb.com/docs/manual/reference/method/db.collection.aggregate/
https://www.mongodb.com/docs/manual/aggregation/

